using System.Collections;
using UnityEngine;

using Main_Scripts.EventSystem.SimpleEvents;

namespace HealthSystem
{
    public class InvulnerabilityFramesSystem : MonoBehaviour
    {
        [SerializeField] private float invulnerabilityTimeInSeconds;
        [SerializeField] private HealthSystem _healthSystem;

        [Header("Events")]
        [SerializeField] private NoTypeGameEvent becameInvincibleEvent;
        [SerializeField] private NoTypeGameEvent becameMortalEvent;

        private void OnEnable()
        {
            _healthSystem = GetComponent<HealthSystem>();
        }

        public void ActivateInvulnerability()
        {
            StartCoroutine(InvulnerabilityRoutine());
        }
        
        public IEnumerator InvulnerabilityRoutine()
        {
            Debug.Log("Becoming invincible");
            _healthSystem.canTakeDamage = false;
            becameInvincibleEvent?.InvokeEvent();
            yield return new WaitForSeconds(invulnerabilityTimeInSeconds);
            _healthSystem.canTakeDamage = true;
            becameMortalEvent?.InvokeEvent();
        }

        public void ToggleInvulnerability(){
            _healthSystem.canTakeDamage = !_healthSystem.canTakeDamage;
        }
    }
}